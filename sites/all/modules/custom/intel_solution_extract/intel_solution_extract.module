<?php

/**
 * Implements hook_menu().
 */
 
function intel_solution_extract_menu() {

  $items = array();
  
  $items['solutions/delta'] = array(
    'page callback' => 'solutions_delta',
	'type' => MENU_CALLBACK,
    'access callback' => TRUE,
    //'access arguments' => array('access mymodule reports'),
    //'type' => MENU_CALLBACK,
  );

  return $items;
   
}


/*** SOLUTION EXTRACT *****/

function solutions_delta() {
	ini_set('post_max_size', '1024M');
	ini_set('max_execution_time', 1800);

	$columnHeader ='';
	$columnHeader = "Solution node Id"."\t"."Solution Tilte"."\t"."Company"."\t"."Client"."\t"."Server"."\t"."IoT"."\t"."Intel Content"."\t"."Logged In Content"."\t"."Public Content"."\t";

	header("Content-type: application/octet-stream");
	header("Content-Disposition: attachment; filename=SD-Solutions.xls");

	// Ravish
	// header("Content-type: application/vnd.ms-excel");
	// header("Content-Disposition: attachment; filename=SD-Solutions.xls");

	header("Pragma: no-cache");
	header("Expires: 0");
	echo ucwords($columnHeader);
	//echo $setData."\n";
	
	// Fetch only Categories
	$categories_array = array();
	$vac_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (1) order by name;");	
	foreach ($vac_result as $rec) {	
		$terms = array();
		$terms =  taxonomy_get_tree( $rec->vid );		
		foreach($terms as $term) {
			$categories_array[] = $term->name;
			foreach($term->parents as $term_parent) {				
				$parent_list = '';				
				if ($term_parent == 0) {
					$parent_list = $term->name;
				} else {
					$parents = taxonomy_get_parents_all($term->tid);
					$parents = array_reverse($parents);
					$parent_list = '';			
					 foreach($parents as $parent) {
						$term = taxonomy_term_load($parent->tid);
						$parent_list .= $term->name.' -> ';
					 }
				}
				$parent_list = rtrim($parent_list," -> ");
				
				echo $term->tid."~"."$parent_list"."\t";			
			}			
		}
	}
	

	// Fetch all Characteristics ( not including Categories)
		$terms_array = array();
		$new_vac_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid not in (1,21,23,26,28,29,34,38,33,25,31,18) order by name;");	
		foreach ($new_vac_result as $new_rec) {	
			$new_terms = array();
			$new_terms =  taxonomy_get_tree( $new_rec->vid );		
			foreach($new_terms as $new_term) {
				$terms_array[] = $new_term->name;
				foreach($new_term->parents as $new_term_parent) {				
					$new_parent_list = '';				
					if ($new_term_parent == 0) {
						$new_parent_list = $new_term->name;
					} else {
						$new_parents = taxonomy_get_parents_all($new_term->tid);
						$new_parents = array_reverse($new_parents);
						$new_parent_list = '';			
						 foreach($new_parents as $new_parent) {
							$new_term = taxonomy_term_load($new_parent->tid);
							$new_parent_list .= $new_term->name.' -> ';
						 }
					}
					$new_parent_list = rtrim($new_parent_list," -> ");
					
					echo $new_term->tid."~"."$new_rec->name"." -> "."$new_parent_list"."\t";			
				}			
			}
		}
	
	// Missing headers...
	
	//$addtional_headers  = "Website URL"."\t"; " Description "."\t".
	
	// solution details
	
	$addtional_headers = "Description". "\t" ." Website URL "."\t"." Datasheet "."\t"." Product Brief"."\t"." Additional Resources URL"."\t";
	
	// Price 
	
	$addtional_headers  .= " Price per unit "."\t"." Price per 100 Units "."\t"." Price per 1000 Units "."\t"." Order Button URL "."\t";
	
	// Processors
	
	$addtional_headers  .= " Number of processors/sockets "."\t"." Processor socketed "."\t";
	
	// Display
	
	$addtional_headers  .= " Number of independent displays "."\t"." Number of Display Ports/EDP Ports "."\t"." Number of HDMI ports "."\t"." Number of LVDS ports "."\t"." Number of Other ports "."\t"." Number of VGA ports "."\t"." Total number of ports "."\t"." Number of DVI ports "."\t"." PCIe x16 Graphics Slot"."\t";
	
	// memory 
	
	$addtional_headers .= " Memory ECC "."\t"." Maximum Size (per processor) GB "."\t";
	
	// ether net 
	
	$addtional_headers .= " Camera Interface "."\t"." Ethernet - Number of ports "."\t"." GPS "."\t";
	
	// inter connect 
	
	$addtional_headers .= " Number of Serial Ports "."\t"." CSIX "."\t"." PC/104 "."\t"." Keyboard and mouse "."\t";
	
	// pci express
	
	$addtional_headers .= " Mini PCI Express "."\t"." pci express - x1 Quantity "."\t"." pci express - x2 Quantity "."\t"." pci express - x4 Quantity "."\t"." pci express - x8 Quantity "."\t"." pci express - x16 Quantity "."\t"." PCI Express AS "."\t"." SD, SDIO or eMMC "."\t"." SIM socket "."\t"." SPI "."\t";
	
	$addtional_headers .= " USB - On the Go "."\t"." USB1 Quantity "."\t"." USB2 Quantity "."\t"." USB3 Quantity "."\t"." USB-C Quantity "."\t";
	

	$addtional_headers .= " Number of CFST Ports (Compact Flash) "."\t"." Number of IDE Ports "."\t"." Number of SATA Ports "."\t"." SATA RAID support "."\t"." SSD size in GB"."\t";
	
	$addtional_headers .= "Promoted to front page"."\t"."Published"."\t"."State"."\t"."Sticky"."\t"."Post date"."\t"."Posted time"."\t"."Updated date"."\t"."Updated time"."\t";
	
	
	
	echo $addtional_headers;
	
	echo "\n";
	
	// Start Processing soltuions

	
	
	$nids = db_query("SELECT nid FROM node WHERE node.nid IN ( 865,1691,3108,31526 ) ")->fetchCol();
	    
	foreach($nids as $nid) {
		$node = node_load($nid);
		//echo '<pre>';print_r($node);exit;
		$comp_id = $node->field_company['und'][0]['target_id'];
		if($comp_id != ""){
		$comp = db_query("select title from node where type='company' and nid=$comp_id")->fetchCol();
		} else {
		$comp[0] = "";	
		}

//		$title = strip_tags(preg_replace('/<[^>]*>/','',str_replace(array("&nbsp;","\n","\r"),"",html_entity_decode($node->title,ENT_QUOTES,'UTF-8'))));
        $title = htmlentities($node->title);


		echo $nid."\t";
		echo $title."\t";
		echo $comp[0]."\t";		
		
		// Client, Server & IoT mappings.
			
			$client = " ";
			$server = " ";
			$e_iot = " ";		
			
			/*
			$is_content_type_client = db_query("SELECT field_solution_type_value FROM field_data_field_solution_type WHERE field_solution_type_value='client' AND entity_id = ". $nid)->fetchField();
			$is_content_type_server = db_query("SELECT field_solution_type_value FROM field_data_field_solution_type WHERE field_solution_type_value='server' AND entity_id = ". $nid)->fetchField();
			$is_content_type_iot = db_query("SELECT field_solution_type_value FROM field_data_field_solution_type WHERE field_solution_type_value='embedded iot' AND entity_id = ". $nid)->fetchField();
			if( $is_content_type_client == 'client') { $client = 1;}
			if( $is_content_type_server == 'server') { $server = 1;}
			if( $is_content_type_iot == 'embedded iot') { $e_iot = 1;}
			// echo " "."\t"." "."\t"." "."\t"; // Client, Server, IoT
			*/
			echo $client."\t".$server."\t".$e_iot."\t";
		
		
			$intel_only_content = " ";
			$logged_in_content = " ";
			$public_content = " ";
			
		/*
		//View Options
			$pre_release = db_query("SELECT field_pre_release_value FROM field_data_field_pre_release WHERE entity_id = ". $nid)->fetchField();
			$intel_only = db_query("SELECT field_intel_only_value FROM field_data_field_intel_only WHERE entity_id = ". $nid)->fetchField();
			
			if($pre_release == 1 || $intel_only == 1){
				$intel_only_content = 1;
			}
			if($intel_only_content != 1){
				$public_content = 1;
			}
			echo $intel_only_content."\t".$logged_in_content."\t".$public_content."\t"; // View Options
		//End Of View Options
		*/

		$view_options = db_query("SELECT field_access_value FROM field_data_field_access WHERE entity_id = ". $nid)->fetchField();
		
		if( $view_options == 0 ){ $public_content = 1;}
		if( $view_options == 1 ){ $logged_in_content = 1;}
		if( $view_options == 2 ){ $intel_only_content = 1;}
		
		echo $intel_only_content."\t".$logged_in_content."\t".$public_content."\t"; // View Options
		
		// Display Categories value ( 1 OR 0 ) mapped with solution
		
		$node_categories = array();
		foreach ($node->field_categories['und'] as $cats) {
			//$selected_term = taxonomy_term_load($cats['tid']);
			//$name = $selected_term->name;
			//$node_categories[] = $name;
			$node_categories[] = $cats['tid'];
		}
		
		$vac_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (1) order by name;");	
		foreach ($vac_result as $rec) {	
			$terms =  taxonomy_get_tree( $rec->vid );
			foreach($terms as $term) { 				
				if (in_array( $term->tid , $node_categories)) {
					echo "1"."\t";
				} else {
					echo " "."\t";
				}				
			}		
		}
		
		
		// Processing each characteristics ( AS PER order in the query result )
		
		$node_characteristics = array();
		
		//| Approved Nouns |  33 |
		
		
		
		//| Audio Standards |  14 |
			$node_audiostds = array();
			foreach ($node->field_stds_audio['und'] as $cats14) {
				$node_audiostds[] = $cats14['tid'];
			}
			
			$as_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (14) order by name;");	
			foreach ($as_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 				
					if (in_array( $term->tid , $node_audiostds)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}				
				}		
			}
		
		
		//| Availability & Pricing |  44 |
		
			$node_avps = array();
			
			$avps_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (44) order by name;");	
			foreach ($avps_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					/*
					if (in_array( $term->tid , $node_audiostds)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
					*/
					echo " "."\t";					
				}		
			}
		
		
		//| Battery |  11 |
			$node_battery = array();
			foreach ($node->field_power['und'] as $cats11) {
				$node_battery[] = $cats11['tid'];
			}
			
			$battery_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (11) order by name;");	
			foreach ($battery_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					
					if (in_array( $term->tid , $node_battery)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
					
									
				}		
			}
			
		
		//| Chipsets |   2 |
			$node_chipsets = array();
			foreach ($node->field_chipsets['und'] as $cats2) {
				$node_chipsets[] = $cats2['tid'];
			}
			
			$chipsets_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (2) order by name;");	
			foreach ($chipsets_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					
					if (in_array( $term->tid , $node_chipsets)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
					
									
				}		
			}
			

			
		// Devices and Interfaces |   4 |
			$node_device_interface = array();
			foreach ($node->field_application['und'] as $cats4) {
				$node_device_interface[] = $cats4['tid'];
			}
			
			$device_interface_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (4) order by name;");	
			foreach ($device_interface_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					
					if (in_array( $term->tid , $node_device_interface)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
					
									
				}		
			}
			
			

		//| Dimensions |  42 |
		
			$node_dimensions = array();
			
			$dimensions_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (42) order by name;");	
			foreach ($dimensions_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					/*
					if (in_array( $term->tid , $node_dimensions)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
					*/
					echo " "."\t";					
				}		
			}

		//| Display                            |  35 |
		
			$node_display = array();
			
			$display_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (35) order by name;");	
			foreach ($display_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					/*
					if (in_array( $term->tid , $node_display)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
					*/
					echo " "."\t";					
				}		
			}
		
		//| Display Size                       |   3 |
		
			$node_display_size = array();		
			foreach ($node->field_display_size['und'] as $cats3) {
				$node_display_size[] = $cats3['tid'];
			}
			
			$display_size_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (3) order by name;");	
			foreach ($display_size_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					if (in_array( $term->tid , $node_display_size)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
										
				}		
			}

			
		//| Display Technology                 |  37 |
			$node_display_tech = array();
			foreach ($node->field_display_technology['und'] as $cats37) {
				$node_display_tech[] = $cats37['tid'];
			}
			
			$display_tech_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (37) order by name;");	
			foreach ($display_tech_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					if (in_array( $term->tid , $node_display_tech)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
										
				}		
			}
			

		//| Embedded IA Processor Support      |  27 |
			
			$node_eips = array();
			
			$eips_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (27) order by name;");	
			foreach ($eips_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					/*
					if (in_array( $term->tid , $node_eips)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
					*/
					echo " "."\t";					
				}		
			}
		
		// 45 | end_user_organisation            | End User Organisation              |
			$node_euo = array();
			
			$euo_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (45) order by name;");	
			foreach ($euo_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					/*
					if (in_array( $term->tid , $node_euo)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
					*/
					echo " "."\t";					
				}		
			}
		
		//  46 | environment                      | Environment                        |
			
			$node_env = array();
			foreach ($node->field_environment['und'] as $cats46) {
				$node_env[] = $cats46['tid'];
			}
			
			$env_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (46) order by name;");	
			foreach ($env_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					if (in_array( $term->tid , $node_env)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
										
				}		
			}
			
		
		
		//| Ethernet Controllers               |   5 |	
			$node_ethernet_cont = array();
			foreach ($node->field_ethernet_controllers['und'] as $cats5) {
				$node_ethernet_cont[] = $cats5['tid'];
			}
			
			$ethernet_cont_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (5) order by name;");	
			foreach ($ethernet_cont_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					if (in_array( $term->tid , $node_ethernet_cont)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
										
				}		
			}
			
			
		//| Ethernet Standards                 |  15 |	
			$node_ethernet_std = array();
			foreach ($node->field_stds_eth['und'] as $cats15) {
				$node_ethernet_std[] = $cats15['tid'];
			}
			
			$ethernet_std_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (15) order by name;");	
			foreach ($ethernet_std_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					if (in_array( $term->tid , $node_ethernet_std)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
										
				}		
			}
			
			
		//| FPGA                               |  41 |	
			$node_fpga = array();
			foreach ($node->field_fpga['und'] as $cats41) {
				$node_fpga[] = $cats41['tid'];
			}
			
			$fpga_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (41) order by name;");	
			foreach ($fpga_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					if (in_array( $term->tid , $node_fpga)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
										
				}		
			}
		
		//| Geographic Coverage                |  22 |
			
			$node_geo_cov = array();
			
			$geo_cov_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (22) order by name;");	
			foreach ($geo_cov_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					/*
					if (in_array( $term->tid , $node_geo_cov)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
					*/
					echo " "."\t";					
				}		
			}
		
		//| Geographic Headquarters            |  24 |
		
			$node_geo_head = array();
			
			$geo_head_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (24) order by name;");	
			foreach ($geo_head_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					/*
					if (in_array( $term->tid , $node_geo_head)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
					*/
					echo " "."\t";					
				}		
			}
		
		//| Geographic Location                |   6 |	
			$node_geo_location = array();		
			foreach ($node->field_geographic_location['und'] as $cats6) {
				$node_geo_location[] = $cats6['tid'];
			}
			
			$geo_location_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (6) order by name;");	
			foreach ($geo_location_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					if (in_array( $term->tid , $node_geo_location)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
										
				}		
			}
			
		
		// market_segments | Industries and Applications  9

			$node_market_segments = array();
			foreach ($node->field_market_segments['und'] as $cats9) {
				$node_market_segments[] = $cats9['tid'];
			}
			
			$market_segments_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (9) order by name;");	
			foreach ($market_segments_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					if (in_array( $term->tid , $node_market_segments)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
										
				}		
			}
			
			
			
		//| Intel Sponsoring Business Units    |  25 |
		
		
		//| IntelÂ® IoT Market Ready Solutions  |  40 |	
			$node_iot_mrs = array();
			foreach ($node->field_intel_iot_market_ready_sol['und'] as $cats40) {
				$node_iot_mrs[] = $cats40['tid'];
			}
			
			$iot_mrs_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (40) order by name;");	
			foreach ($iot_mrs_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					if (in_array( $term->tid , $node_iot_mrs)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
										
				}		
			}
					
		
		//| IntelÂ® Technologies                |   7 |	
			$node_intel_tech = array();
			foreach ($node->field_intel_technologies['und'] as $cats7) {
				$node_intel_tech[] = $cats7['tid'];
			}
			
			$intel_tech_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (7) order by name;");	
			foreach ($intel_tech_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					if (in_array( $term->tid , $node_intel_tech)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
										
				}		
			}
		
		//| Interconnect                       |  36 |
			
			$node_interconnect = array();
			
			$interconnect_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (36) order by name;");	
			foreach ($interconnect_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					/*
					if (in_array( $term->tid , $node_interconnect)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
					*/
					echo " "."\t";					
				}		
			}
		
		
		//| LAN                                |  19 |
			$node_lan = array();
			foreach ($node->field_stds_wlan['und'] as $cats19) {
				$node_lan[] = $cats19['tid'];
			}
			
			$lan_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (19) order by name;");	
			foreach ($lan_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					if (in_array( $term->tid , $node_lan)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
										
				}		
			}
			
		

		//| Memory Type                        |  10 |	
			$node_memory = array();		
			foreach ($node->field_memory_type['und'] as $cats10) {
				$node_memory[] = $cats10['tid'];
			}
			
			$memory_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (10) order by name;");	
			foreach ($memory_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					if (in_array( $term->tid , $node_memory)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
										
				}		
			}
			
			
		//| Opportunity Group                  |  31 |
		
		//| Opportunity Resource Type          |  32 |
		
			$node_ort = array();
			
			$ort_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (32) order by name;");	
			foreach ($ort_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					/*
					if (in_array( $term->tid , $node_ort)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
					*/
					echo " "."\t";					
				}		
			}
			
		
		//| PCIe Revisions                     |  17 |
			$node_pcie = array();
			foreach ($node->field_stds_pcie_rev['und'] as $cats17) {
				$node_pcie[] = $cats17['tid'];
			}
			
			$pcie_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (17) order by name;");	
			foreach ($pcie_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					if (in_array( $term->tid , $node_pcie)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
										
				}		
			}
			
			
		//| Processors                         |  12 |
			$node_processors = array();
			foreach ($node->field_processors_list['und'] as $cats12) {
				$node_processors[] = $cats12['tid'];
			}
			
			$processors_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (12) order by name;");	
			foreach ($processors_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					
					if (in_array( $term->tid , $node_processors)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
		
					//echo "Test"."\t";
				}		
			}
		
			
		//| Software Solutions                 |  13 |	
			$node_software = array();
			foreach ($node->field_software_solutions['und'] as $cats13) {
				$node_software[] = $cats13['tid'];
			}
			
			$software_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (13) order by name;");	
			foreach ($software_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					
					if (in_array( $term->tid , $node_software)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
					
					//echo "Sw"."\t";
										
				}		
			}
			
			
		//| Storage                            |  43 |
			$node_storage = array();
			
			$storage_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (43) order by name;");	
			foreach ($storage_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
					/*
					if (in_array( $term->tid , $node_storage)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
					*/
					echo " "."\t";					
				}		
			}
		
		
		//| Systems Standards                  |  18 |
		/*
			foreach ($node->field_stds_systems['und'] as $cats18) {
				$node_characteristics[] = $cats18['tid'];
			}
		*/
		
				
		//| Wireless                           |   8 |	
			$node_wireless = array();
			foreach ($node->field_intel_wireless['und'] as $cats8) {
				$node_wireless[] = $cats8['tid'];
			}
			
			$wireless_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (8) order by name;");	
			foreach ($wireless_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 
					
					if (in_array( $term->tid , $node_wireless)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
					
					//echo "wireless"."\t";				
				}		
			}
			
			
		
		//| WWAN (Cellular) Standards          |  20 |
			$node_wwan = array();
			foreach ($node->field_stds_wwan['und'] as $cats20) {
				$node_wwan[] = $cats20['tid'];
			}
			
			$wwan_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid in (20) order by name;");	
			foreach ($wwan_result as $rec) {	
				$terms =  taxonomy_get_tree( $rec->vid );
				foreach($terms as $term) { 	
				
					if (in_array( $term->tid , $node_wwan)) {
						echo "1"."\t";
					} else {
						echo " "."\t";
					}
					
					
					
										
				}		
			}
		
		/*
		$new_vac_result = db_query("select vid,machine_name,name from taxonomy_vocabulary where vid not in (1,21,23,26,28,29,34,38,33,25,31,18) order by name;");			
		foreach ($new_vac_result as $new_rec) {	
			$new_terms =  taxonomy_get_tree( $new_rec->vid );		
			foreach($new_terms as $new_term) {
				
				
				if (in_array( $new_term->tid , $node_characteristics)) {
					echo "1"."\t";
				} else {
					echo " "."\t";
				}
				
				//echo "Test"."\t";
				
			}
		}
		*/
		
		
		// Values for additional headers 
		
				// echo $node->field_website['und'][0]['url']."\t";  $node->body['und'][0]['safe_value']."\t".
       
	   //Ravish

				$desc = strip_tags(preg_replace('/<[^>]*>/','',str_replace(array("&nbsp;","\n","\r"),"",html_entity_decode($node->body['und'][0]['value'],ENT_QUOTES,'UTF-8'))));

				//$desc = htmlentities($node->body['und'][0]['value']);
                //$desc="test Description";

				echo $desc."\t".$node->field_website['und'][0]['url']."\t".$node->field_datasheet['und'][0]['url']."\t". $node->field_brief['und'][0]['url']. "\t".$node->field_additional_resources['und'][0]['url']. "\t";
				
				echo $node->field_price_per_unit['und'][0]['value']."\t".$node->field_price_per_100_units['und'][0]['value']."\t".$node->field_price_per_1000_units['und'][0]['value']."\t".$node->field_order_button_url['und'][0]['value']."\t";
				
				echo $node->field_processors_count['und'][0]['value']."\t".$node->field_stds_processor_socketed['und'][0]['value']."\t";
				
				echo $node->field_display_independent['und'][0]['value']."\t".$node->field_display_port_edp['und'][0]['value']."\t".$node->field_display_hdmi['und'][0]['value']."\t".$node->field_display_lvds['und'][0]['value']."\t".$node->field_display_other['und'][0]['value']."\t".$node->field_display_vga['und'][0]['value']."\t".$node->field_display_total['und'][0]['value']."\t".$node->field_number_of_dvi_ports['und'][0]['value']."\t".$node->field_display_pcie_x16['und'][0]['value']."\t";
		
				echo $node->field_memory_ecc['und'][0]['value']."\t".$node->field_memory_max['und'][0]['value']."\t";
		
				echo $node->field_stds_camera['und'][0]['value']."\t".$node->field_stds_eth_ports['und'][0]['value']."\t".$node->field_stds_gps['und'][0]['value']."\t";
				
				echo $node->field_number_of_serial_ports['und'][0]['value']."\t".$node->field_stds_csix['und'][0]['value']."\t".$node->field_stds_pc_104['und'][0]['value']."\t".$node->field_keyboard_and_mouse['und'][0]['value']."\t";
		
				echo $node->field_stds_pcie_mini['und'][0]['value']."\t".$node->field_stds_pcie_x1['und'][0]['value']."\t".$node->field_stds_pcie_x2['und'][0]['value']."\t".$node->field_stds_pcie_x4['und'][0]['value']."\t".$node->field_stds_pcie_x8['und'][0]['value']."\t".$node->field_stds_pcie_x16['und'][0]['value']."\t".$node->field_stds_pcie_as['und'][0]['value']."\t".$node->field_stds_sd_sdio_emmc['und'][0]['value']."\t".$node->field_stds_sim['und'][0]['value']."\t".$node->field_stds_spi['und'][0]['value']."\t";
		
				echo $node->field_stds_usb_on_the_go['und'][0]['value']."\t".$node->field_stds_usb_usb1['und'][0]['value']."\t".$node->field_stds_usb_usb2['und'][0]['value']."\t".$node->field_stds_usb_usb3['und'][0]['value']."\t".$node->field_stds_usb_usb_c['und'][0]['value']."\t";
		
				echo $node->field_stds_storage_cfst['und'][0]['value']."\t".$node->field_stds_storage_ide['und'][0]['value']."\t".$node->field_stds_storage_sata['und'][0]['value']."\t".$node->field_stds_storage_raid['und'][0]['value']."\t".$node->field_stds_storage_ssd_size['und'][0]['value']."\t";
		
	
		
				// promote
				if( $node->promote == 0) { $promote='No';} else { $promote='Yes';}
						
				// Published 0: not published 1: published
				if( $node->status == 1) { $status='Published';} else { $status='Not published';}
				
				// Workflow state ###########################
				 $query_result = db_query("select n.nid,n.uid,wn.sid, n.changed, n.title from {node} n join {workflow_node} wn on wn.nid = n.nid where n.type = :type and n.nid = :nid", array(':type' => 'solution', ':nid' => $nid));
				 
				 while ($row = $query_result->fetchAssoc()) {
					$sid = $row['sid'];    
				}
				 
				$state = workflow_get_state_name($sid);
				
				// sticky
				if( $node->sticky == 0) { $sticky='No';} else { $sticky='Yes';}
						
				echo $promote."\t".$status."\t".$state."\t".$sticky."\t".date('d/m/Y',$node->created)."\t".date('H:i',$node->created)."\t".date('d/m/Y',$node->changed )."\t".date('H:i',$node->changed )."\t";	
		
		echo "\n";
	}
	exit;
}
